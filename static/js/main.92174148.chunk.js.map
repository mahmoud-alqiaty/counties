{"version":3,"sources":["components/contexts/ModeContext.js","components/Navbar/Navbar.js","Pages/Home/HomeStyles.js","components/Card/CardStyle.js","components/Card/Card.js","components/contexts/CountriesComtext/Types.js","components/contexts/CountriesComtext/CountriesReducer.js","components/contexts/CountriesComtext/CountriesContext.js","components/Error.js","components/Loading.js","components/HomeCards/HomeCardsStyle.js","components/HomeCards/HomeCards.js","Pages/Home/Home.js","Pages/Details/Detailsstyles.js","Pages/Details/Details.js","App.js","index.js"],"names":["modeContext","createContext","ModeContextProvider","children","useState","isLight","setIsLight","Provider","value","toggleMode","NavbarContainer","styled","div","islight","NavLogo","Link","Navbar","useContext","to","className","onClick","HomeContainer","HomeForm","form","SearchIcon","BsSearch","SearchBox","SelectBox","showOptions","CardContainer","CardImg","img","CardInfo","Card","flag","name","population","region","capital","nativeName","src","alt","FETCH_REQUEST","FETCH_SUCCESS","FETCH_FILTERED","FETCH_SEARCH","FETCH_DETAILS","FETCH_BORDERS","FETCH_ERROR_All","FETCH_ERROR_Details","initstate","loading","fetchedCountries","countryDetails","borders","errorAll","errorDetails","Reducer","state","type","payload","CountriesContext","CountriesProvider","useReducer","dispatch","ErrorContainer","Error","message","LoadingContainer","LoadingAnmition","keyframes","LoadingIcon","VscLoading","Loading","HomeCardsContainer","HomeCardsInnerContainer","HomeCards","length","map","item","index","Home","optionsRef","useRef","felterrRegion","setFelterrRegion","searched","setSearched","setShowOptions","handleDocumentclick","e","current","contains","target","useEffect","document","addEventListener","removeEventListener","handleSubmit","preventDefault","axios","get","then","res","data","catch","err","onSubmit","placeholder","onChange","ref","DetailsContainer","BackBtn","button","DetailsInnerContent","DetailsImg","DetailsData","DetailsInfo","BorderCountries","Details","useParams","i","console","log","history","useHistory","goBack","subregion","topLevelDomain","currencies","languages","GlobalStyles","createGlobalStyle","App","path","exact","component","ReactDOM","render","ModeContext","getElementById"],"mappings":"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","file":"static/js/main.92174148.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\r\n\r\nexport const modeContext = createContext()\r\n\r\nconst ModeContextProvider = ({children}) => {\r\n    const [isLight, setIsLight] = useState(true)\r\n    const toggleMode = ()=>{\r\n        setIsLight(!isLight)\r\n    }\r\n    return (\r\n        <modeContext.Provider value={{isLight, toggleMode}}>\r\n            {children}\r\n        </modeContext.Provider >\r\n    )\r\n}\r\n\r\nexport default ModeContextProvider\r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport {FaMoon, FaRegMoon} from 'react-icons/fa'\r\nimport { modeContext } from '../contexts/ModeContext'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst NavbarContainer = styled.div `\r\n    width: 100%;\r\n    height: 60px;\r\n    padding: 0 30px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    font-weight: 800;\r\n    font-size: 18px;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 1000;\r\n    background-color: ${({islight})=> islight? \"hsl(0, 0%, 100%)\" : \"hsl(209, 23%, 22%)\"};\r\n    color: ${({islight})=> islight? \"hsl(200, 15%, 8%)\" : \"hsl(0, 0%, 100%)\"};\r\n    box-shadow: 0 3px 5px ${({islight})=> islight? \"#eee\" : \"none\"} ;\r\n\r\n    .mode-name{\r\n        cursor: pointer;\r\n    }\r\n    .mode-text{\r\n        margin-left: 5px;\r\n    }\r\n`\r\nconst NavLogo = styled(Link) `\r\n    text-decoration: none;\r\n    color: ${({islight})=> islight? \"hsl(200, 15%, 8%)\" : \"hsl(0, 0%, 100%)\"};\r\n`\r\nconst Navbar = () => {\r\n    const {isLight, toggleMode} = useContext(modeContext)\r\n    return (\r\n        <NavbarContainer islight={isLight}>\r\n            <NavLogo to=\"/\" islight={isLight}>\r\n                Where in the world?\r\n            </NavLogo>\r\n            <div className=\"mode-name\" onClick={toggleMode}>\r\n                {\r\n                    isLight? <FaMoon /> : <FaRegMoon />\r\n                }\r\n                \r\n                <span className=\"mode-text\">\r\n                    {isLight? \"Dark\" : \"Light\" } Mode\r\n                </span>\r\n            </div>\r\n        </NavbarContainer>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import styled from 'styled-components'\r\nimport { BsSearch } from 'react-icons/bs'\r\n\r\n\r\nexport const HomeContainer = styled.div `\r\n    width: 100%;\r\n    min-height: 100vh;\r\n    margin: 100px 0;\r\n    padding: 0 30px;\r\n    font-size: 14px;\r\n`\r\nexport const HomeForm = styled.form `\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    @media screen and (max-width: 840px){\r\n        flex-direction: column;\r\n        height: 100px;\r\n    }\r\n`\r\nexport const SearchIcon = styled(BsSearch) `\r\n   cursor: pointer;\r\n`\r\nexport const SearchBox = styled.div `\r\n    /* height: 50px; */\r\n    padding: 0 20px;\r\n    border-radius: 7px;\r\n    box-shadow: 0 2px 5px ${({isLight})=> isLight? \"#eee\" : \"none\"};\r\n    background-color: ${({isLight})=> isLight? \"hsl(0, 0%, 100%)\" : \"hsl(209, 23%, 22%)\"};\r\n    color: ${({isLight})=> isLight? \"hsl(0, 0%, 52%)\" : \"hsl(0, 0%, 100%)\"} ;\r\n    input{\r\n        border: none;\r\n        outline: none;\r\n        margin-left: 15px;\r\n        padding: 20px 0;\r\n        background-color: transparent;\r\n        width: 350px;\r\n        color: ${({isLight})=> isLight? \"hsl(0, 0%, 52%)\" : \"hsl(0, 0%, 100%)\"};\r\n        font-size: 16px;\r\n        font-weight: 300;\r\n    }\r\n\r\n    @media screen and (max-width: 500px){\r\n      input{\r\n        width: 150px;\r\n      }\r\n    }\r\n`\r\nexport const SelectBox = styled.div `\r\n    width: 270px;\r\n    /* height: 40px; */\r\n    font-size: 16px;\r\n    font-weight: 300;\r\n    color: ${({isLight})=> isLight? \"hsl(200, 15%, 8%)\" : \"hsl(0, 0%, 100%)\"};\r\n    text-transform: capitalize;\r\n    font-weight: 600;\r\n    position: relative;\r\n\r\n    .select-header{\r\n        width: 100%;\r\n        padding: 20px;\r\n        background-color: ${({isLight})=> isLight? \"hsl(0, 0%, 100%)\" : \"hsl(209, 23%, 22%)\"};\r\n        border-radius: 7px;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        box-shadow: 0 2px 5px ${({isLight})=> isLight? \"#eee\" : \"none\"};\r\n        cursor: pointer;\r\n    }\r\n    .selected-region{\r\n        color: blue;\r\n    }\r\n    .options{\r\n        width: 100%;\r\n        border-radius: 7px;\r\n        background-color: ${({isLight})=> isLight? \"hsl(0, 0%, 100%)\" : \"hsl(209, 23%, 22%)\"};\r\n        box-shadow: 0 2px 5px ${({isLight})=> isLight? \"#eee\" : \"none\"};\r\n        position: absolute;\r\n        top: 65px;\r\n        left: 0;\r\n        z-index: 100;\r\n        display: ${({showOptions})=> showOptions? \"block\" : \"none\" };\r\n    } \r\n\r\n    .option{\r\n        cursor: pointer;\r\n        padding: 10px 20px;\r\n        &:hover{\r\n            background-color: #eee;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 500px){\r\n      width: 100%;\r\n      margin: 10px auto;\r\n    }\r\n`","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const CardContainer = styled(Link) `\r\n    height: 350px;\r\n    text-decoration: none;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    transition: .2s;\r\n    box-shadow: 0 0 5px hsl(209, 23%, 22%);\r\n    &:hover{\r\n        transform: scale(1.05);\r\n    }\r\n`\r\nexport const CardImg = styled.img `\r\n    display: block;\r\n    width: 100%;\r\n    height: 150px;\r\n    object-fit: cover;\r\n    border-radius: 10px 10px 0 0;\r\n`\r\nexport const CardInfo = styled.div `\r\n    width: 100%;\r\n    height: 200px;\r\n    padding: 20px;\r\n    border-radius: 0px 0px 10px 10px;\r\n    background-color: ${({isLight})=> isLight? \"hsl(0, 0%, 100%)\" : \"hsl(209, 23%, 22%)\"};\r\n    color: ${({isLight})=> isLight? \"hsl(200, 15%, 8%)\" : \"hsl(0, 0%, 100%)\"};\r\n\r\n    h2{\r\n        padding: 7px 0;\r\n    }\r\n    p{\r\n        padding: 0 0 3px;\r\n        font-weight: 600;\r\n    }\r\n\r\n    p span{\r\n        color: ${({isLight})=> isLight? \"hsl(0, 0%, 52%)\" : \"hsl(0, 0%, 100%)\"};\r\n        font-weight: 300;\r\n    }\r\n`\r\n\r\n","import React, { useContext } from 'react'\r\nimport { modeContext } from '../contexts/ModeContext'\r\nimport {CardContainer, CardImg, CardInfo} from './CardStyle'\r\n\r\nconst Card = ({flag, name, population, region, capital, nativeName}) => {\r\n    const {isLight} = useContext(modeContext)\r\n    return (\r\n        <CardContainer to={`/countries/${nativeName}`}>\r\n            <CardImg src={flag} alt={name} />\r\n            <CardInfo isLight={isLight}>\r\n                <h2>{name}</h2>\r\n                <p>Population: <span>{population}</span></p>\r\n                <p>Region: <span>{region}</span></p>\r\n                <p>Capital: <span>{capital}</span></p>\r\n            </CardInfo>\r\n        </CardContainer>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","export const FETCH_REQUEST = \"FETCH_REQUEST\" \r\nexport const FETCH_SUCCESS = \"FETCH_SUCCESS\" \r\nexport const FETCH_FILTERED = \"FETCH_FILTERED\" \r\nexport const FETCH_SEARCH = \"FETCH_SEARCH\" \r\nexport const FETCH_DETAILS = \"FETCH_DETAILS\" \r\nexport const FETCH_BORDERS = \"FETCH_BORDERS\" \r\nexport const FETCH_ERROR_All = \"FETCH_ERROR_All\" \r\nexport const FETCH_ERROR_Details = \"FETCH_ERROR_Details\" ","\r\nimport {\r\n  FETCH_REQUEST, \r\n  FETCH_SUCCESS, \r\n  FETCH_FILTERED,  \r\n  FETCH_ERROR_All, \r\n  FETCH_ERROR_Details, \r\n  FETCH_SEARCH, \r\n  FETCH_DETAILS, \r\n  FETCH_BORDERS\r\n} from './Types'\r\n\r\nexport const initstate = {\r\n    loading: false,\r\n    fetchedCountries: [],\r\n    countryDetails: {},\r\n    borders: [],\r\n    errorAll: \"\",\r\n    errorDetails: \"\"\r\n}\r\nexport const Reducer = (state, {type, payload})=>{\r\n    switch (type) {\r\n        case FETCH_REQUEST: \r\n          return{\r\n            ...state,\r\n            loading: true,\r\n          }\r\n\r\n        case FETCH_SUCCESS: \r\n          return{\r\n            loading: false,\r\n            fetchedCountries: payload,\r\n            countryDetails: {},\r\n            borders: [],\r\n            errorAll: \"\",\r\n            errorDetails: \"\"\r\n          }\r\n\r\n        case FETCH_FILTERED: \r\n          return{\r\n            loading: false,\r\n            fetchedCountries: payload,\r\n            countryDetails: {},\r\n            borders: [],\r\n            errorAll: \"\",\r\n            errorDetails: \"\"\r\n          }\r\n\r\n        case FETCH_SEARCH: \r\n          return{\r\n            loading: false,\r\n            fetchedCountries: payload,\r\n            countryDetails: {},\r\n            borders: [],\r\n            errorAll: \"\",\r\n            errorDetails: \"\"\r\n          }\r\n\r\n        case FETCH_DETAILS: \r\n          return{\r\n            ...state,\r\n            loading: false,\r\n            countryDetails: payload,\r\n            borders: [],\r\n            errorAll: \"\",\r\n            errorDetails: \"\"          \r\n          }\r\n\r\n        case FETCH_BORDERS: \r\n          return{\r\n            ...state,\r\n            loading: false,\r\n            borders: [...state.borders, payload],\r\n            errorAll: \"\",\r\n            errorDetails: \"\"          \r\n          }\r\n    \r\n        case FETCH_ERROR_All: \r\n          return{\r\n            loading: false,\r\n            fetchedCountries: [],\r\n            countryDetails: {},\r\n            errorAll: payload,\r\n            errorDetails: \"\"\r\n          }\r\n        case FETCH_ERROR_Details: \r\n          return{\r\n            ...state,\r\n            loading: false,\r\n            countryDetails: {},\r\n            errorAll: \"\",\r\n            errorDetails:payload\r\n          }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}","import React, { createContext, useReducer } from 'react'\r\nimport { initstate, Reducer } from './CountriesReducer'\r\n\r\nexport const CountriesContext  = createContext()\r\n\r\nconst CountriesProvider = ({children}) => {\r\n    const [state, dispatch] = useReducer(Reducer, initstate)\r\n    return (\r\n        <CountriesContext.Provider value={{\r\n            loading: state.loading,\r\n            fetchedCountries: state.fetchedCountries,\r\n            countryDetails: state.countryDetails,\r\n            borders: state.borders,\r\n            errorAll: state.errorAll,\r\n            errorDetails: state.errorDetails,\r\n            dispatch\r\n            }}\r\n        >\r\n            {children}\r\n        </CountriesContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CountriesProvider\r\n","import React from 'react'\r\nimport { BiError } from 'react-icons/bi'\r\nimport styled from 'styled-components'\r\n\r\nconst ErrorContainer = styled.div `\r\n    width: 100%;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n`\r\nconst Error = ({message}) => {\r\n    return (\r\n        <ErrorContainer>\r\n            <BiError />\r\n            {message}\r\n        </ErrorContainer>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React from 'react'\r\nimport {VscLoading} from 'react-icons/vsc'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nconst LoadingContainer = styled.div `\r\n    width: 100%;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n`\r\nconst LoadingAnmition = keyframes `\r\n    0%{\r\n        transform: rotate(0deg);\r\n    }\r\n    100%{\r\n        transform: rotate(360deg);\r\n    }\r\n`\r\nconst LoadingIcon = styled(VscLoading)`\r\n    font-size: 80px;\r\n    animation: ${LoadingAnmition} 3s infinite;\r\n    margin-top: 150px;\r\n    \r\n\r\n`\r\nconst Loading = () => {\r\n    return (\r\n        <LoadingContainer>\r\n            < LoadingIcon />\r\n        </LoadingContainer>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import styled from \"styled-components\";\r\n\r\nexport const HomeCardsContainer = styled.div `\r\n    width: 100%;\r\n    min-height: 100vh;\r\n    margin: 20px 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    .total-result{\r\n        margin: 30px auto;\r\n        text-align: center;\r\n        font-size: 18px;\r\n        font-weight: 800;\r\n        border-bottom: 1px solid ;\r\n        display: inline-block;\r\n        color: ${({islight})=> islight? \"hsl(200, 15%, 8%)\" : \"hsl(0, 0%, 100%)\"};\r\n    }\r\n`\r\nexport const HomeCardsInnerContainer = styled.div `\r\n    width: 100%;\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    grid-gap: 40px;\r\n\r\n    @media screen and (max-width: 992px){\r\n        grid-template-columns: repeat(3, 1fr);\r\n    }\r\n\r\n    @media screen and (max-width: 700px){\r\n        grid-template-columns: repeat(2, 1fr);\r\n    }\r\n    @media screen and (max-width: 500px){\r\n        grid-template-columns: repeat(1, 1fr);\r\n    }\r\n`\r\n","import React, { useContext } from 'react'\r\nimport Card from '../Card/Card'\r\nimport { CountriesContext } from '../contexts/CountriesComtext/CountriesContext'\r\nimport { modeContext } from '../contexts/ModeContext'\r\nimport Error from '../Error'\r\nimport Loading from '../Loading'\r\nimport {HomeCardsContainer, HomeCardsInnerContainer} from './HomeCardsStyle'\r\n\r\nconst HomeCards = () => {\r\n    const {isLight} = useContext(modeContext)\r\n    const {loading, fetchedCountries, errorAll} = useContext(CountriesContext)\r\n    return (\r\n        <>\r\n        {\r\n            loading? <Loading />:\r\n            errorAll? <Error message={errorAll} /> :\r\n            <HomeCardsContainer islight={isLight}>\r\n                <div className=\"total-result\">\r\n                    Total Results: {fetchedCountries.length} <span>Countries</span>\r\n                </div>\r\n                <HomeCardsInnerContainer>\r\n                    {\r\n                        fetchedCountries && [...fetchedCountries].map((item, index)=>\r\n                            <Card\r\n                                nativeName={item.nativeName}\r\n                                key={index} \r\n                                flag={item.flag}\r\n                                name={item.name}\r\n                                population={item.population}\r\n                                region={item.region}\r\n                                capital={item.capital}\r\n                            />\r\n                        )\r\n                    }\r\n                </HomeCardsInnerContainer>\r\n        \r\n        </HomeCardsContainer>\r\n    \r\n        }\r\n        </>\r\n       )\r\n}\r\n\r\nexport default HomeCards\r\n","import React, { useContext, useState, useEffect, useRef } from 'react'\r\nimport { modeContext } from '../../components/contexts/ModeContext'\r\nimport { AiOutlineCaretDown } from 'react-icons/ai'\r\nimport {HomeContainer, HomeForm, SearchBox, SelectBox, SearchIcon} from './HomeStyles.js'\r\nimport HomeCards from '../../components/HomeCards/HomeCards'\r\nimport { CountriesContext } from '../../components/contexts/CountriesComtext/CountriesContext'\r\nimport axios from 'axios'\r\nimport { \r\n    FETCH_REQUEST, \r\n    FETCH_SUCCESS, \r\n    FETCH_FILTERED,  \r\n    FETCH_ERROR_All, \r\n    FETCH_SEARCH \r\n} from '../../components/contexts/CountriesComtext/Types'\r\n\r\n\r\nconst Home = () => {\r\n    const {isLight} = useContext(modeContext)\r\n    const {fetchedCountries, dispatch} = useContext(CountriesContext)\r\n    const optionsRef = useRef()\r\n    \r\n    const [felterrRegion, setFelterrRegion] = useState(\"\")\r\n    const [searched, setSearched] = useState(\"\")\r\n    const [showOptions, setShowOptions] = useState(false)\r\n    const toggleShowOptions = ()=>{\r\n        setShowOptions(!showOptions)\r\n    }\r\n\r\n    const handleDocumentclick = (e)=>{\r\n        if(!optionsRef.current.contains(e.target))\r\n        setShowOptions(false)\r\n    }\r\n    useEffect(() => {\r\n       document.addEventListener('mousedown', handleDocumentclick)\r\n       return()=>{\r\n           document.removeEventListener('mousedown', handleDocumentclick)\r\n       }\r\n    }, [])\r\n\r\n    const fetchData = ()=>{\r\n        dispatch({type: FETCH_REQUEST})\r\n        axios.get(`https://restcountries.eu/rest/v2/all`)\r\n        .then(res=>{\r\n            dispatch({type: FETCH_SUCCESS, payload: res.data})\r\n        })\r\n        .catch(err=>{\r\n            dispatch({type: FETCH_ERROR_All, payload: err.message})\r\n        })\r\n    }\r\n\r\n    const fetchStoredData = ()=>{\r\n        dispatch({type: FETCH_SUCCESS, payload: fetchedCountries})\r\n    }\r\n\r\n    const options = [\"africa\", \"Americas\", \"asia\", \"europe\", \"oceania\"]\r\n\r\n    const felterByRegion = (region)=>{\r\n        dispatch({type: FETCH_REQUEST})\r\n        axios.get(`https://restcountries.eu/rest/v2/region/${region}`)\r\n        .then(res=>{\r\n            dispatch({type: FETCH_FILTERED, payload: res.data})\r\n        })\r\n        .catch(err=>{\r\n            dispatch({type: FETCH_ERROR_All, payload: err.message})\r\n        })\r\n    }\r\n\r\n    const searchCountry = (name)=>{\r\n        dispatch({type: FETCH_REQUEST})\r\n        axios.get(`https://restcountries.eu/rest/v2/name/${name}`)\r\n        .then(res=>{\r\n            dispatch({type: FETCH_SEARCH, payload: res.data})\r\n        })\r\n        .catch(err=>{\r\n            dispatch({type: FETCH_ERROR_All, payload: err.message})\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        searchCountry(searched)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(fetchedCountries.length === 0){\r\n            fetchData()\r\n        } \r\n        else{\r\n            fetchStoredData()\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <HomeContainer isLight={isLight}>\r\n            <HomeForm isLight={isLight} onSubmit={(e)=>handleSubmit(e)}>\r\n                <SearchBox isLight={isLight}>\r\n                    <span onClick={(e)=>handleSubmit(e)}>\r\n                        <SearchIcon />\r\n                    </span>\r\n                    <input \r\n                        type=\"text\"\r\n                        value={searched} \r\n                        placeholder=\"Serach for A Country\" \r\n                        onChange={e=> setSearched(e.target.value)} \r\n                    />\r\n                </SearchBox> \r\n                \r\n                <SelectBox isLight={isLight} showOptions={showOptions} ref={optionsRef}>\r\n                    <div className=\"select-header\" onClick={toggleShowOptions}>\r\n                        <span>filter by region <span className=\"selected-region\">{felterrRegion}</span></span>\r\n                        <AiOutlineCaretDown />\r\n                    </div>\r\n                    <div className=\"options\">\r\n                        {\r\n                            options.map((item, index)=>\r\n                                <p \r\n                                    className=\"option\" \r\n                                    key={index}\r\n                                    onClick={()=>{\r\n                                        felterByRegion(item);\r\n                                        setShowOptions(false)\r\n                                        setFelterrRegion(item)\r\n                                        }\r\n                                    }\r\n                                >\r\n                                    {item}\r\n                                </p>\r\n                            )\r\n\r\n                        }\r\n                    </div>\r\n                </SelectBox>\r\n            </HomeForm>\r\n\r\n            <HomeCards />\r\n        </HomeContainer>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import styled from \"styled-components\";\r\n\r\nexport const DetailsContainer = styled.div `\r\n    width: 100%;;\r\n    min-height: 100vh;\r\n    padding: 80px 50px;\r\n    background-color: ${({isLight})=> isLight? \"hsl(0, 0%, 100%)\" : \"hsl(207, 26%, 17%)\"};\r\n    color: ${({isLight})=> isLight? \"hsl(200, 15%, 8%)\" : \"hsl(0, 0%, 100%)\"};\r\n\r\n    @media screen and (max-width: 500px){\r\n        padding: 80px 20px;\r\n    }\r\n`\r\nexport const BackBtn = styled.button `\r\n    width: 100px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 5px 10px;\r\n    margin: 30px 0;\r\n    border: none;\r\n    outline: none;\r\n    font-size: 18px;\r\n    font-weight: 300;\r\n    cursor: pointer;\r\n    background-color: ${({isLight})=> isLight? \"hsl(0, 0%, 100%)\" : \"hsl(209, 23%, 22%)\"};\r\n    color: ${({isLight})=> isLight? \"hsl(200, 15%, 8%)\" : \"hsl(0, 0%, 100%)\"};\r\n    box-shadow: 0 3px 5px ${({isLight})=> isLight? \"#eee\" : \"#000\"} ;\r\n`\r\n\r\nexport const DetailsInnerContent = styled.div `\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    @media screen and (max-width: 992px){\r\n        flex-direction: column;\r\n    }\r\n`\r\nexport const DetailsImg = styled.img `\r\n    display: block;\r\n    width: 400px;\r\n    max-width: 100%;\r\n    height: 400px;\r\n`\r\nexport const DetailsData = styled.div `\r\n    width: 60%;\r\n    height: 100%;\r\n    margin-left: 20px;\r\n\r\n    @media screen and (max-width: 1200px){\r\n        width: 80%;\r\n    }\r\n    @media screen and (max-width: 992px){\r\n        margin-top: 30px;\r\n    }\r\n    @media screen and (max-width: 768px){\r\n        width: 100%;\r\n    }\r\n    @media screen and (max-width: 500px){\r\n        margin-left: 0;\r\n    }\r\n`\r\nexport const DetailsInfo = styled.div `\r\n    width: 100%;\r\n    margin: 20px 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n   \r\n   .leftSide{\r\n       width: 50%;\r\n       margin-right: 10px;\r\n   }\r\n   .rightside{\r\n       margin-left: 10px;\r\n       width: 50%;\r\n   }\r\n    p{\r\n        margin-bottom: 10px;\r\n        font-weight: 600;\r\n        font-size: 20px;\r\n    }\r\n\r\n    p span{\r\n        font-weight: 300;\r\n        margin-left: 7px;\r\n    }\r\n\r\n    @media screen and (max-width: 768px){\r\n       flex-direction: column;\r\n       text-align: start;\r\n\r\n       .leftSide{\r\n            width: 100%;\r\n        }\r\n       .rightside{\r\n            margin-left: 0px;\r\n            width: 100%;\r\n        }\r\n    }\r\n`\r\nexport const BorderCountries = styled.div `\r\n    width: 70%;\r\n    margin: 10px 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    p{\r\n        margin-bottom: 10px;\r\n        font-weight: 600;\r\n        font-size: 20px;\r\n    }\r\n\r\n    .borders{\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n    }\r\n    .border_Btn{\r\n        padding: 5px 25px;\r\n        margin: 10px 0 0 10px;\r\n        background-color: ${({isLight})=> isLight? \"hsl(0, 0%, 100%)\" : \"hsl(209, 23%, 22%)\"};\r\n        color: ${({isLight})=> isLight? \"hsl(200, 15%, 8%)\" : \"hsl(0, 0%, 100%)\"};\r\n        box-shadow: 0 0 5px ${({isLight})=> isLight? \"#bbb\" : \"#000\"} ;\r\n        cursor: pointer;\r\n        text-decoration: none;\r\n    }\r\n\r\n\r\n    @media screen and (max-width: 1200px){\r\n       width: 80%;\r\n    }\r\n    @media screen and (max-width: 768px){\r\n       width: 100%;\r\n    }\r\n    @media screen and (max-width: 500px){\r\n       flex-direction: column;\r\n    }\r\n`","import React, { useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { Link, useHistory, useParams } from 'react-router-dom'\r\n//icons\r\nimport { IoIosArrowRoundBack } from 'react-icons/io'\r\n\r\n//Components\r\nimport Loading from '../../components/Loading'\r\nimport Error from '../../components/Error'\r\n\r\n// contexts\r\nimport {CountriesContext} from '../../components/contexts/CountriesComtext/CountriesContext'\r\nimport { modeContext } from '../../components/contexts/ModeContext'\r\n\r\nimport { FETCH_REQUEST, FETCH_ERROR_Details, FETCH_DETAILS, FETCH_BORDERS\r\n} from '../../components/contexts/CountriesComtext/Types'\r\n\r\n//styled-Components\r\nimport {\r\n    DetailsContainer, \r\n    BackBtn, \r\n    DetailsInnerContent, \r\n    DetailsImg, DetailsData, \r\n    DetailsInfo, \r\n    BorderCountries\r\n} from './Detailsstyles'\r\n\r\n\r\nconst Details = () => {\r\n    const {nativeName} = useParams()\r\n    const {isLight} = useContext(modeContext)\r\n    const { loading, countryDetails, errorDetails, borders, dispatch} \r\n    = useContext(CountriesContext)\r\n\r\n    const fetchDetailsByName = (name)=>{\r\n        dispatch({type: FETCH_REQUEST})\r\n        axios.get(`https://restcountries.eu/rest/v2/name/${name}?fullText=true`)\r\n        .then(res=>{\r\n            dispatch({type: FETCH_DETAILS, payload: res.data[0]})\r\n            return res= res.data[0]\r\n        })\r\n        .then(res=>{\r\n            if(res.borders){ \r\n                for(let i=0; i<res.borders.length; i++){\r\n                     axios.get(`https://restcountries.eu/rest/v2/alpha/${res.borders[i]}`)\r\n                     .then(res=>{\r\n                         dispatch({type: FETCH_BORDERS, payload: res.data.name})\r\n                     })\r\n                 }\r\n            }\r\n        })\r\n        .catch(err=>{\r\n            console.log(err.message);\r\n            dispatch({type: FETCH_ERROR_Details, payload: err.message})\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchDetailsByName(nativeName)\r\n        return null\r\n    }, [nativeName])\r\n    \r\n    const history = useHistory()\r\n    const handleBackClick = ()=>{\r\n        history.goBack()\r\n    }\r\n\r\n    return (\r\n        <DetailsContainer isLight={isLight}>\r\n            <BackBtn isLight={isLight} onClick={handleBackClick}>\r\n                <IoIosArrowRoundBack />\r\n                back\r\n            </BackBtn>\r\n            {\r\n                loading? <Loading /> :\r\n                errorDetails? <Error message={errorDetails} /> :\r\n                <DetailsInnerContent>\r\n                    <DetailsImg src={countryDetails.flag} alt={countryDetails.name} />\r\n                    <DetailsData>\r\n                        <h1>{countryDetails.name}</h1>\r\n                        <DetailsInfo>\r\n                            <div className=\"leftSide\">\r\n                            <p>Native Name: <span>{countryDetails.nativeName}</span></p>\r\n                            <p>Population: <span>{countryDetails.population}</span></p>\r\n                            <p>Region: <span>{countryDetails.region}</span></p>\r\n                            <p>sub Region: <span>{countryDetails.subregion}</span></p>\r\n                            <p>Capital: <span>{countryDetails.capital}</span></p>\r\n                            </div>\r\n\r\n                            <div className=\"rightside\">\r\n                                <p>Top Level Domain: \r\n                                    {\r\n                                        countryDetails.topLevelDomain && countryDetails.topLevelDomain.map((item, index)=> \r\n                                        <span key={index}>{index > 0 && \",\"}{item}</span>\r\n                                        )\r\n                                    }\r\n                                </p>\r\n                                <p>Currencies: \r\n                                    {\r\n                                        countryDetails.currencies && countryDetails.currencies.map((item, index)=>\r\n                                        <span key={index}>{index > 0 && \",\"}{item.name}</span>\r\n                                        )\r\n                                    }\r\n                                </p>\r\n                                <p>Languages: \r\n                                    {\r\n                                        countryDetails.languages && countryDetails.languages.map((item, index)=>\r\n                                        <span key={index}>{index > 0 && \",\"}{item.name}</span>\r\n                                        )\r\n                                    }\r\n                                </p>\r\n                            </div>\r\n                        </DetailsInfo>\r\n\r\n                        { borders? \r\n                            <BorderCountries isLight={isLight}>\r\n                                <p>Border countries: </p>\r\n                                <div className=\"borders\">\r\n                                {   \r\n                                borders && borders.map((item, index)=>\r\n                                    <Link key={index} to={`/countries/${item}`} className=\"border_Btn\">\r\n                                        {item}\r\n                                    </Link>\r\n                                )\r\n                                }\r\n                            \r\n                                </div>\r\n                            </BorderCountries> : null\r\n                        }\r\n                    </DetailsData>\r\n                </DetailsInnerContent>\r\n            }\r\n        </DetailsContainer>\r\n    )\r\n}\r\n\r\nexport default Details\r\n","import React, { useContext } from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { modeContext } from './components/contexts/ModeContext'\nimport Navbar from './components/Navbar/Navbar'\nimport Home from './Pages/Home/Home'\nimport { createGlobalStyle } from 'styled-components';\nimport CountriesProvider from './components/contexts/CountriesComtext/CountriesContext'\nimport Details from './Pages/Details/Details'\n\nconst GlobalStyles = createGlobalStyle `\n  *{\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n  }\n\n  body{\n    font-family: 'Nunito Sans', sans-serif;\n    background-color: ${({isLight})=> isLight? \" hsl(0, 0%, 98%) \": \"hsl(207, 26%, 17%)\"};\n  }\n`\n\nfunction App() {\n  const {isLight} = useContext(modeContext)\n  return (\n    <div >\n    <BrowserRouter>\n      <CountriesProvider>\n          <GlobalStyles isLight={isLight} />\n          <Navbar />\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/countries/:nativeName\" component={Details} />\n          </Switch>\n      </CountriesProvider>\n    </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport ModeContextProvider from './components/contexts/ModeContext'\n\nReactDOM.render(\n  <ModeContextProvider>\n    <App />\n  </ModeContextProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}